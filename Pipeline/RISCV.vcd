$date
	Mon Jun  3 06:07:10 2024
$end

$version
	Synopsys VCS version R-2020.12-SP2_Full64
$end

$timescale
	1ps
$end

$comment Csum: 1 5030a12122fbfd46 $end


$scope module test_RISC_V $end

$scope module uut $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 # beq $end
$var wire 1 $ mem_read $end
$var wire 1 % mem_write $end
$var wire 1 & alu_src $end
$var wire 1 ' mem_to_reg $end
$var wire 1 ( reg_write $end
$var wire 2 ) alu_op [1:0] $end
$var wire 3 * opcode [2:0] $end

$scope module DatapathUnit $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 # beq $end
$var wire 1 $ mem_read $end
$var wire 1 % mem_write $end
$var wire 1 & alu_src $end
$var wire 1 ' mem_to_reg $end
$var wire 1 ( reg_write $end
$var wire 2 ) alu_op [1:0] $end
$var wire 3 * Opcode [2:0] $end
$var reg 32 + pc_current [31:0] $end
$var wire 32 , pc_next [31:0] $end
$var wire 32 - pc2 [31:0] $end
$var wire 32 . offset [31:0] $end
$var wire 32 / Instruction [31:0] $end
$var wire 3 0 cod_ins [2:0] $end
$var wire 5 1 reg_write_dest [4:0] $end
$var wire 64 2 reg_write_data [63:0] $end
$var wire 5 3 reg_read_addr_1 [4:0] $end
$var wire 64 4 reg_read_data_1 [63:0] $end
$var wire 5 5 reg_read_addr_2 [4:0] $end
$var wire 64 6 reg_read_data_2 [63:0] $end
$var wire 64 7 im_ext [63:0] $end
$var wire 64 8 read_data2 [63:0] $end
$var wire 64 9 read_data1 [63:0] $end
$var wire 64 : ALU_out [63:0] $end
$var wire 1 ; zero_flag $end
$var wire 1 < PCSrc $end
$var wire 32 = PC_beq [31:0] $end
$var wire 64 > mem_read_data [63:0] $end
$var wire 64 ? reg_read_data2 [63:0] $end
$var wire 2 @ SelOpA [1:0] $end
$var wire 2 A SelOpB [1:0] $end
$var wire 1 B Sel_1 $end
$var wire 1 C Sel_2 $end
$var wire 1 D PCWrite $end
$var wire 1 E IF_ID_Write $end
$var wire 1 F ControlMuxSel $end
$var wire 1 G IF_Flush $end
$var reg 1 H beq1 $end
$var reg 1 I mem_read1 $end
$var reg 1 J mem_write1 $end
$var reg 1 K alu_src1 $end
$var reg 1 L mem_to_reg1 $end
$var reg 1 M reg_write1 $end
$var reg 2 N alu_op1 [1:0] $end
$var reg 64 O OperandDataA [63:0] $end
$var reg 64 P OperandDataB [63:0] $end
$var reg 32 Q IF_ID_pc [31:0] $end
$var reg 32 R IF_ID_Instruction [31:0] $end
$var reg 5 S ID_EX_Rs1 [4:0] $end
$var reg 5 T ID_EX_Rs2 [4:0] $end
$var reg 64 U ID_EX_ReadData1 [63:0] $end
$var reg 64 V ID_EX_ReadData2 [63:0] $end
$var reg 5 W ID_EX_Rd [4:0] $end
$var reg 64 X ID_EX_Inmediato [63:0] $end
$var reg 1 Y EX_MEM_zero $end
$var reg 64 Z EX_MEM_ALUresult [63:0] $end
$var reg 5 [ EX_MEM_Rd [4:0] $end
$var reg 64 \ EX_MEM_RegData [63:0] $end
$var reg 64 ] MEM_WB_MemData [63:0] $end
$var reg 64 ^ MEM_WB_ALUresult [63:0] $end
$var reg 5 _ MEM_WB_Rd [4:0] $end
$var reg 2 ` Ex_ALUOp [1:0] $end
$var reg 1 a Ex_ALUSrc $end
$var reg 1 b Ex_Branch $end
$var reg 1 c Ex_MemWrite $end
$var reg 1 d Ex_MemRead $end
$var reg 1 e Ex_MemtoReg $end
$var reg 1 f Ex_RegWrite $end
$var reg 1 g Mem_Branch $end
$var reg 1 h Mem_MemWrite $end
$var reg 1 i Mem_MemRead $end
$var reg 1 j Mem_MemtoReg $end
$var reg 1 k Mem_RegWrite $end
$var reg 1 l Wb_MemtoReg $end
$var reg 1 m Wb_RegWrite $end

$scope module Memoria_Instrucciones $end
$var wire 1 ! clk $end
$var wire 32 n Addres [31:0] $end
$var reg 32 o Instruction [31:0] $end
$var wire 3 p rom_addr [2:0] $end
$upscope $end


$scope module Decodificador $end
$var wire 1 ! clk $end
$var wire 32 q Instruction [0:31] $end
$var reg 3 r Opcode [2:0] $end
$var reg 5 s Rs1 [4:0] $end
$var reg 5 t Rs2 [4:0] $end
$var reg 5 u Rd [4:0] $end
$var reg 32 v Offset [31:0] $end
$var wire 3 w Sel [2:0] $end
$var wire 3 x DataProcessingOp [2:0] $end
$var wire 1 y SumOrSub $end
$upscope $end


$scope module GPRs $end
$var wire 5 3 ptr_rd_1 [4:0] $end
$var wire 5 5 ptr_rd_2 [4:0] $end
$var wire 5 z ptr_wr [4:0] $end
$var wire 64 2 data_wr [63:0] $end
$var wire 1 { wr_en $end
$var wire 1 " rst $end
$var wire 1 ! clk $end
$var reg 64 | data_rd_1 [63:0] $end
$var reg 64 } data_rd_2 [63:0] $end
$var wire 1 ~ inverted_clk $end
$var reg 1 "! clk_reg $end

$scope module Habilitador_escritura $end
$var wire 5 z reg_wr_cod [4:0] $end
$var wire 1 { wr_en $end
$upscope $end


$scope module Mux_rd_1 $end
$var wire 5 3 read_code [4:0] $end
$var wire 64 "" Q [63:0] $end

$scope module Decodificador $end
$var wire 5 3 Selector [4:0] $end
$upscope $end

$upscope $end


$scope module Mux_rd_2 $end
$var wire 5 5 read_code [4:0] $end
$var wire 64 "# Q [63:0] $end

$scope module Decodificador $end
$var wire 5 5 Selector [4:0] $end
$upscope $end

$upscope $end


$scope module Registro_[1].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "$ clk $end
$var wire 1 " rst $end
$var wire 1 "% enable $end
$var reg 64 "& q [63:0] $end
$upscope $end


$scope module Registro_[2].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "' clk $end
$var wire 1 " rst $end
$var wire 1 "( enable $end
$var reg 64 ") q [63:0] $end
$upscope $end


$scope module Registro_[3].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "* clk $end
$var wire 1 " rst $end
$var wire 1 "+ enable $end
$var reg 64 ", q [63:0] $end
$upscope $end


$scope module Registro_[4].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "- clk $end
$var wire 1 " rst $end
$var wire 1 ". enable $end
$var reg 64 "/ q [63:0] $end
$upscope $end


$scope module Registro_[5].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "0 clk $end
$var wire 1 " rst $end
$var wire 1 "1 enable $end
$var reg 64 "2 q [63:0] $end
$upscope $end


$scope module Registro_[6].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "3 clk $end
$var wire 1 " rst $end
$var wire 1 "4 enable $end
$var reg 64 "5 q [63:0] $end
$upscope $end


$scope module Registro_[7].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "6 clk $end
$var wire 1 " rst $end
$var wire 1 "7 enable $end
$var reg 64 "8 q [63:0] $end
$upscope $end


$scope module Registro_[8].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "9 clk $end
$var wire 1 " rst $end
$var wire 1 ": enable $end
$var reg 64 "; q [63:0] $end
$upscope $end


$scope module Registro_[9].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "< clk $end
$var wire 1 " rst $end
$var wire 1 "= enable $end
$var reg 64 "> q [63:0] $end
$upscope $end


$scope module Registro_[10].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "? clk $end
$var wire 1 " rst $end
$var wire 1 "@ enable $end
$var reg 64 "A q [63:0] $end
$upscope $end


$scope module Registro_[11].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "B clk $end
$var wire 1 " rst $end
$var wire 1 "C enable $end
$var reg 64 "D q [63:0] $end
$upscope $end


$scope module Registro_[12].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "E clk $end
$var wire 1 " rst $end
$var wire 1 "F enable $end
$var reg 64 "G q [63:0] $end
$upscope $end


$scope module Registro_[13].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "H clk $end
$var wire 1 " rst $end
$var wire 1 "I enable $end
$var reg 64 "J q [63:0] $end
$upscope $end


$scope module Registro_[14].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "K clk $end
$var wire 1 " rst $end
$var wire 1 "L enable $end
$var reg 64 "M q [63:0] $end
$upscope $end


$scope module Registro_[15].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "N clk $end
$var wire 1 " rst $end
$var wire 1 "O enable $end
$var reg 64 "P q [63:0] $end
$upscope $end


$scope module Registro_[16].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "Q clk $end
$var wire 1 " rst $end
$var wire 1 "R enable $end
$var reg 64 "S q [63:0] $end
$upscope $end


$scope module Registro_[17].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "T clk $end
$var wire 1 " rst $end
$var wire 1 "U enable $end
$var reg 64 "V q [63:0] $end
$upscope $end


$scope module Registro_[18].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "W clk $end
$var wire 1 " rst $end
$var wire 1 "X enable $end
$var reg 64 "Y q [63:0] $end
$upscope $end


$scope module Registro_[19].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "Z clk $end
$var wire 1 " rst $end
$var wire 1 "[ enable $end
$var reg 64 "\ q [63:0] $end
$upscope $end


$scope module Registro_[20].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "] clk $end
$var wire 1 " rst $end
$var wire 1 "^ enable $end
$var reg 64 "_ q [63:0] $end
$upscope $end


$scope module Registro_[21].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "` clk $end
$var wire 1 " rst $end
$var wire 1 "a enable $end
$var reg 64 "b q [63:0] $end
$upscope $end


$scope module Registro_[22].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "c clk $end
$var wire 1 " rst $end
$var wire 1 "d enable $end
$var reg 64 "e q [63:0] $end
$upscope $end


$scope module Registro_[23].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "f clk $end
$var wire 1 " rst $end
$var wire 1 "g enable $end
$var reg 64 "h q [63:0] $end
$upscope $end


$scope module Registro_[24].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "i clk $end
$var wire 1 " rst $end
$var wire 1 "j enable $end
$var reg 64 "k q [63:0] $end
$upscope $end


$scope module Registro_[25].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "l clk $end
$var wire 1 " rst $end
$var wire 1 "m enable $end
$var reg 64 "n q [63:0] $end
$upscope $end


$scope module Registro_[26].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "o clk $end
$var wire 1 " rst $end
$var wire 1 "p enable $end
$var reg 64 "q q [63:0] $end
$upscope $end


$scope module Registro_[27].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "r clk $end
$var wire 1 " rst $end
$var wire 1 "s enable $end
$var reg 64 "t q [63:0] $end
$upscope $end


$scope module Registro_[28].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "u clk $end
$var wire 1 " rst $end
$var wire 1 "v enable $end
$var reg 64 "w q [63:0] $end
$upscope $end


$scope module Registro_[29].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "x clk $end
$var wire 1 " rst $end
$var wire 1 "y enable $end
$var reg 64 "z q [63:0] $end
$upscope $end


$scope module Registro_[30].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "{ clk $end
$var wire 1 " rst $end
$var wire 1 "| enable $end
$var reg 64 "} q [63:0] $end
$upscope $end


$scope module Registro_[31].Registro $end
$var wire 64 2 data [63:0] $end
$var wire 1 "~ clk $end
$var wire 1 " rst $end
$var wire 1 #! enable $end
$var reg 64 #" q [63:0] $end
$upscope $end

$upscope $end


$scope module InmSext $end
$var wire 32 . Offset [31:0] $end
$var reg 64 ## Inmediato [63:0] $end
$var wire 3 #$ Selector [2:0] $end
$upscope $end


$scope module Unidad_de_riesgo $end
$var wire 5 3 IF_ID_RegisterRs1 [4:0] $end
$var wire 5 5 IF_ID_RegisterRs2 [4:0] $end
$var wire 5 #% ID_EX_RegisterRd [4:0] $end
$var wire 1 #& ID_EX_MemRead $end
$var wire 1 ; zero $end
$var reg 1 #' IF_Flush $end
$var reg 1 #( PCWrite $end
$var reg 1 #) IF_ID_Write $end
$var reg 1 #* ControlMuxSel $end
$upscope $end


$scope module Unidad_de_Adelantamiento_1 $end
$var wire 5 #+ id_ex_rs1 [4:0] $end
$var wire 5 #, id_ex_rs2 [4:0] $end
$var wire 5 #- ex_mem_rd [4:0] $end
$var wire 5 #. mem_wb_rd [4:0] $end
$var wire 1 #/ ex_mem_regwrite $end
$var wire 1 #0 mem_wb_regwrite $end
$var reg 2 #1 forward_a [1:0] $end
$var reg 2 #2 forward_b [1:0] $end
$upscope $end


$scope module Unidad_de_Adelantamiento_2 $end
$var wire 1 #3 ID_EX_MemWrite $end
$var wire 1 #4 EX_MEM_RegWrite $end
$var wire 5 #5 ID_EX_Rs1 [4:0] $end
$var wire 5 #6 ID_EX_Rs2 [4:0] $end
$var wire 5 #7 EX_MEM_Rd [4:0] $end
$var reg 1 #8 Sel_A $end
$var reg 1 #9 Sel_B $end
$upscope $end


$scope module UnidadALU $end
$var wire 64 9 A [63:0] $end
$var wire 64 8 B [63:0] $end
$var wire 2 #: sel [1:0] $end
$var wire 1 ; zero $end
$var reg 64 #; resultado [63:0] $end
$upscope $end


$scope module Memoria_Informacion $end
$var wire 1 ! clk $end
$var wire 64 #< mem_access_addr [63:0] $end
$var wire 64 #= mem_write_data [63:0] $end
$var wire 1 #> mem_write_en $end
$var wire 1 #? mem_read $end
$var wire 64 > mem_read_data [63:0] $end
$var wire 11 #@ ram_addr [10:0] $end
$var wire 1 #A WriteEnable $end
$upscope $end

$upscope $end


$scope module ControlUnit $end
$var wire 3 * Opcode [2:0] $end
$var reg 2 #B alu_op [1:0] $end
$var reg 1 #C beq $end
$var reg 1 #D mem_read $end
$var reg 1 #E mem_write $end
$var reg 1 #F alu_src $end
$var reg 1 #G mem_to_reg $end
$var reg 1 #H reg_write $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
1F
1#F
0#C
1#D
1#G
0#E
1#H
0#4
0Y
0a
0b
0d
0c
0e
0f
0#&
0#3
1G
1E
0g
0i
0h
0j
0k
0#?
0<
1D
1"?
1"B
1"E
1"H
1"K
1"N
1"Q
1"T
1"W
1"Z
1"$
1"]
1"`
1"c
1"f
1"i
1"l
1"o
1"r
1"u
1"x
1"'
1"{
1"~
1"*
1"-
1"0
1"3
1"6
1"9
1"<
0B
0C
0#8
0#9
0y
1#*
1#'
1#)
1#(
0l
0m
1#A
1&
0K
0#
0H
1"!
0#/
0~
1$
0I
1'
0L
0#0
0%
0J
0#>
1(
0M
1;
b0000000000000000000000000000000000000000000000000000000000000000 :
b00000000000000000000000000000000 n
b00 #B
b000 x
b00000000000000000000000000000000 q
b000 r
b0000000000000000000000000000000000000000000000000000000000000000 Z
b00000 [
b0000000000000000000000000000000000000000000000000000000000000000 \
b00 `
b0000000000000000000000000000000000000000000000000000000000000000 X
b00000 W
b0000000000000000000000000000000000000000000000000000000000000000 U
b0000000000000000000000000000000000000000000000000000000000000000 V
b00000 #%
b00000 S
b00000 T
b00000000000000000000000000000000 R
b00000000000000000000000000000000 Q
b0000000000000000000000000000000000000000000000000000000000000000 ##
b11000000100001010000001010000000 /
b0000000000000000000000000000000000000000000000000000000000000000 ^
b0000000000000000000000000000000000000000000000000000000000000000 ]
b00000 _
b11000000100001010000001010000000 o
b00000000000000000000000000000000 v
b0000000000000000000000000000000000000000000000000000000000000000 O
b0000000000000000000000000000000000000000000000000000000000000000 P
b00000000000000000000000000000000 =
b00000 u
b0000000000000000000000000000000000000000000000000000000000000000 "A
b0000000000000000000000000000000000000000000000000000000000000000 "D
b0000000000000000000000000000000000000000000000000000000000000000 "G
b0000000000000000000000000000000000000000000000000000000000000000 "J
b0000000000000000000000000000000000000000000000000000000000000000 "M
b0000000000000000000000000000000000000000000000000000000000000000 "P
b0000000000000000000000000000000000000000000000000000000000000000 "S
b0000000000000000000000000000000000000000000000000000000000000000 "V
b0000000000000000000000000000000000000000000000000000000000000000 "Y
b0000000000000000000000000000000000000000000000000000000000000000 "\
b0000000000000000000000000000000000000000000000000000000000000000 "_
b0000000000000000000000000000000000000000000000000000000000000000 "b
b0000000000000000000000000000000000000000000000000000000000000000 "e
b0000000000000000000000000000000000000000000000000000000000000000 "h
b0000000000000000000000000000000000000000000000000000000000000000 "k
b0000000000000000000000000000000000000000000000000000000000000000 "n
b0000000000000000000000000000000000000000000000000000000000000000 "q
b0000000000000000000000000000000000000000000000000000000000000000 "t
b0000000000000000000000000000000000000000000000000000000000000000 "w
b0000000000000000000000000000000000000000000000000000000000000000 "z
b0000000000000000000000000000000000000000000000000000000000000000 ")
b0000000000000000000000000000000000000000000000000000000000000000 "}
b0000000000000000000000000000000000000000000000000000000000000000 #"
b0000000000000000000000000000000000000000000000000000000000000000 ",
b0000000000000000000000000000000000000000000000000000000000000000 "/
b0000000000000000000000000000000000000000000000000000000000000000 "2
b0000000000000000000000000000000000000000000000000000000000000000 "5
b0000000000000000000000000000000000000000000000000000000000000000 "8
b0000000000000000000000000000000000000000000000000000000000000000 ";
b0000000000000000000000000000000000000000000000000000000000000000 ">
b00000 s
b00000 t
b000 w
b00 @
b00 A
b000 #$
b00000 #7
b00000 #5
b00000 #6
b00 )
b00 N
b000 0
b0000000000000000000000000000000000000000000000000000000000000000 |
b0000000000000000000000000000000000000000000000000000000000000000 }
b00000 #-
b00 #1
b00 #2
b00000 #+
b00000 #,
b0000000000000000000000000000000000000000000000000000000000000000 7
b0000000000000000000000000000000000000000000000000000000000000000 #<
b0000000000000000000000000000000000000000000000000000000000000000 >
b00000 #.
b0000000000000000000000000000000000000000000000000000000000000000 #=
b00000000000000000000000000000000 .
b000 *
b00000000000000000000000000000100 -
b00000000000000000000000000000000 +
b00000000000000000000000000000100 ,
b0000000000000000000000000000000000000000000000000000000000000000 "&
b00000000000 #@
b0000000000000000000000000000000000000000000000000000000000000000 9
b0000000000000000000000000000000000000000000000000000000000000000 8
b0000000000000000000000000000000000000000000000000000000000000000 ?
b0000000000000000000000000000000000000000000000000000000000000000 4
b0000000000000000000000000000000000000000000000000000000000000000 6
b0000000000000000000000000000000000000000000000000000000000000000 2
b00000 1
b0000000000000000000000000000000000000000000000000000000000000000 #;
b000 p
b00 #:
1!
1"
0{
b00000 z
b00000 3
b00000 5
b0000000000000000000000000000000000000000000000000000000000000000 ""
b0000000000000000000000000000000000000000000000000000000000000000 "#
0"%
0"(
0"+
0".
0"1
0"4
0"7
0":
0"=
0"@
0"C
0"F
0"I
0"L
0"O
0"R
0"U
0"X
0"[
0"^
0"a
0"d
0"g
0"j
0"m
0"p
0"s
0"v
0"y
0"|
0#!
$end
#2000
0"
#5000
0!
0"!
0"~
0"{
0"x
0"u
0"r
0"o
0"l
0"i
0"f
0"c
0"`
0"]
0"Z
0"W
0"T
0"Q
0"N
0"K
0"H
0"E
0"B
0"?
0"<
0"9
0"6
0"3
0"0
0"-
0"*
0"'
0"$
1~
#10000
1!
1"!
1"~
1"{
1"x
1"u
1"r
1"o
1"l
1"i
1"f
1"c
1"`
1"]
1"Z
1"W
1"T
1"Q
1"N
1"K
1"H
1"E
1"B
1"?
1"<
1"9
1"6
1"3
1"0
1"-
1"*
1"'
1"$
0~
b00000000000000000000000000000100 +
b00000000000000000000000000000100 n
b001 p
b11001100010011101000101000000000 o
b11001100010011101000101000000000 /
b00000000000000000000000000001000 -
1Y
b00000000000000000000000000001000 ,
#15000
0!
0"!
0"~
0"{
0"x
0"u
0"r
0"o
0"l
0"i
0"f
0"c
0"`
0"]
0"Z
0"W
0"T
0"Q
0"N
0"K
0"H
0"E
0"B
0"?
0"<
0"9
0"6
0"3
0"0
0"-
0"*
0"'
0"$
1~
#20000
1!
1"!
1"~
1"{
1"x
1"u
1"r
1"o
1"l
1"i
1"f
1"c
1"`
1"]
1"Z
1"W
1"T
1"Q
1"N
1"K
1"H
1"E
1"B
1"?
1"<
1"9
1"6
1"3
1"0
1"-
1"*
1"'
1"$
0~
b00000000000000000000000000001000 +
b00000000000000000000000000001000 n
b010 p
b11001100001001101000011000000000 o
b11001100001001101000011000000000 /
b00000000000000000000000000001100 -
b00000000000000000000000000001100 ,
#25000
0!
0"!
0"~
0"{
0"x
0"u
0"r
0"o
0"l
0"i
0"f
0"c
0"`
0"]
0"Z
0"W
0"T
0"Q
0"N
0"K
0"H
0"E
0"B
0"?
0"<
0"9
0"6
0"3
0"0
0"-
0"*
0"'
0"$
1~
#30000
1!
1"!
1"~
1"{
1"x
1"u
1"r
1"o
1"l
1"i
1"f
1"c
1"`
1"]
1"Z
1"W
1"T
1"Q
1"N
1"K
1"H
1"E
1"B
1"?
1"<
1"9
1"6
1"3
1"0
1"-
1"*
1"'
1"$
0~
b00000000000000000000000000001100 +
b00000000000000000000000000001100 n
b011 p
b11001101001000000100010000000000 o
b11001101001000000100010000000000 /
b00000000000000000000000000010000 -
b00000000000000000000000000010000 ,
#35000
0!
0"!
0"~
0"{
0"x
0"u
0"r
0"o
0"l
0"i
0"f
0"c
0"`
0"]
0"Z
0"W
0"T
0"Q
0"N
0"K
0"H
0"E
0"B
0"?
0"<
0"9
0"6
0"3
0"0
0"-
0"*
0"'
0"$
1~
#40000
1!
1"!
1"~
1"{
1"x
1"u
1"r
1"o
1"l
1"i
1"f
1"c
1"`
1"]
1"Z
1"W
1"T
1"Q
1"N
1"K
1"H
1"E
1"B
1"?
1"<
1"9
1"6
1"3
1"0
1"-
1"*
1"'
1"$
0~
b00000000000000000000000000010000 +
b00000000000000000000000000010000 n
b100 p
b11001101000000001100111000000010 o
b11001101000000001100111000000010 /
b00000000000000000000000000010100 -
b00000000000000000000000000010100 ,
#45000
0!
0"!
0"~
0"{
0"x
0"u
0"r
0"o
0"l
0"i
0"f
0"c
0"`
0"]
0"Z
0"W
0"T
0"Q
0"N
0"K
0"H
0"E
0"B
0"?
0"<
0"9
0"6
0"3
0"0
0"-
0"*
0"'
0"$
1~
#50000
1!
1"!
1"~
1"{
1"x
1"u
1"r
1"o
1"l
1"i
1"f
1"c
1"`
1"]
1"Z
1"W
1"T
1"Q
1"N
1"K
1"H
1"E
1"B
1"?
1"<
1"9
1"6
1"3
1"0
1"-
1"*
1"'
1"$
0~
b00000000000000000000000000010100 +
b00000000000000000000000000010100 n
b101 p
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx o
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /
b00000000000000000000000000011000 -
b00000000000000000000000000011000 ,
#55000
0!
0"!
0"~
0"{
0"x
0"u
0"r
0"o
0"l
0"i
0"f
0"c
0"`
0"]
0"Z
0"W
0"T
0"Q
0"N
0"K
0"H
0"E
0"B
0"?
0"<
0"9
0"6
0"3
0"0
0"-
0"*
0"'
0"$
1~
#60000
1!
1"!
1"~
1"{
1"x
1"u
1"r
1"o
1"l
1"i
1"f
1"c
1"`
1"]
1"Z
1"W
1"T
1"Q
1"N
1"K
1"H
1"E
1"B
1"?
1"<
1"9
1"6
1"3
1"0
1"-
1"*
1"'
1"$
0~
b00000000000000000000000000011000 +
b00000000000000000000000000011000 n
b110 p
b00000000000000000000000000011100 -
b00000000000000000000000000011100 ,
#65000
0!
0"!
0"~
0"{
0"x
0"u
0"r
0"o
0"l
0"i
0"f
0"c
0"`
0"]
0"Z
0"W
0"T
0"Q
0"N
0"K
0"H
0"E
0"B
0"?
0"<
0"9
0"6
0"3
0"0
0"-
0"*
0"'
0"$
1~
#70000
1!
1"!
1"~
1"{
1"x
1"u
1"r
1"o
1"l
1"i
1"f
1"c
1"`
1"]
1"Z
1"W
1"T
1"Q
1"N
1"K
1"H
1"E
1"B
1"?
1"<
1"9
1"6
1"3
1"0
1"-
1"*
1"'
1"$
0~
b00000000000000000000000000011100 +
b00000000000000000000000000011100 n
b111 p
b00000000000000000000000000100000 -
b00000000000000000000000000100000 ,
#75000
0!
0"!
0"~
0"{
0"x
0"u
0"r
0"o
0"l
0"i
0"f
0"c
0"`
0"]
0"Z
0"W
0"T
0"Q
0"N
0"K
0"H
0"E
0"B
0"?
0"<
0"9
0"6
0"3
0"0
0"-
0"*
0"'
0"$
1~
#80000
1!
1"!
1"~
1"{
1"x
1"u
1"r
1"o
1"l
1"i
1"f
1"c
1"`
1"]
1"Z
1"W
1"T
1"Q
1"N
1"K
1"H
1"E
1"B
1"?
1"<
1"9
1"6
1"3
1"0
1"-
1"*
1"'
1"$
0~
b00000000000000000000000000100000 +
b00000000000000000000000000100000 n
b000 p
b11000000100001010000001010000000 o
b11000000100001010000001010000000 /
b00000000000000000000000000100100 -
b00000000000000000000000000100100 ,
#85000
0!
0"!
0"~
0"{
0"x
0"u
0"r
0"o
0"l
0"i
0"f
0"c
0"`
0"]
0"Z
0"W
0"T
0"Q
0"N
0"K
0"H
0"E
0"B
0"?
0"<
0"9
0"6
0"3
0"0
0"-
0"*
0"'
0"$
1~
#90000
1!
1"!
1"~
1"{
1"x
1"u
1"r
1"o
1"l
1"i
1"f
1"c
1"`
1"]
1"Z
1"W
1"T
1"Q
1"N
1"K
1"H
1"E
1"B
1"?
1"<
1"9
1"6
1"3
1"0
1"-
1"*
1"'
1"$
0~
b00000000000000000000000000100100 +
b00000000000000000000000000100100 n
b001 p
b11001100010011101000101000000000 o
b11001100010011101000101000000000 /
b00000000000000000000000000101000 -
b00000000000000000000000000101000 ,
#95000
0!
0"!
0"~
0"{
0"x
0"u
0"r
0"o
0"l
0"i
0"f
0"c
0"`
0"]
0"Z
0"W
0"T
0"Q
0"N
0"K
0"H
0"E
0"B
0"?
0"<
0"9
0"6
0"3
0"0
0"-
0"*
0"'
0"$
1~
#100000
1!
1"!
1"~
1"{
1"x
1"u
1"r
1"o
1"l
1"i
1"f
1"c
1"`
1"]
1"Z
1"W
1"T
1"Q
1"N
1"K
1"H
1"E
1"B
1"?
1"<
1"9
1"6
1"3
1"0
1"-
1"*
1"'
1"$
0~
b00000000000000000000000000101000 +
b00000000000000000000000000101000 n
b010 p
b11001100001001101000011000000000 o
b11001100001001101000011000000000 /
b00000000000000000000000000101100 -
b00000000000000000000000000101100 ,
#105000
0!
0"!
0"~
0"{
0"x
0"u
0"r
0"o
0"l
0"i
0"f
0"c
0"`
0"]
0"Z
0"W
0"T
0"Q
0"N
0"K
0"H
0"E
0"B
0"?
0"<
0"9
0"6
0"3
0"0
0"-
0"*
0"'
0"$
1~
#110000
1!
1"!
1"~
1"{
1"x
1"u
1"r
1"o
1"l
1"i
1"f
1"c
1"`
1"]
1"Z
1"W
1"T
1"Q
1"N
1"K
1"H
1"E
1"B
1"?
1"<
1"9
1"6
1"3
1"0
1"-
1"*
1"'
1"$
0~
b00000000000000000000000000101100 +
b00000000000000000000000000101100 n
b011 p
b11001101001000000100010000000000 o
b11001101001000000100010000000000 /
b00000000000000000000000000110000 -
b00000000000000000000000000110000 ,
#115000
0!
0"!
0"~
0"{
0"x
0"u
0"r
0"o
0"l
0"i
0"f
0"c
0"`
0"]
0"Z
0"W
0"T
0"Q
0"N
0"K
0"H
0"E
0"B
0"?
0"<
0"9
0"6
0"3
0"0
0"-
0"*
0"'
0"$
1~
#120000
1!
1"!
1"~
1"{
1"x
1"u
1"r
1"o
1"l
1"i
1"f
1"c
1"`
1"]
1"Z
1"W
1"T
1"Q
1"N
1"K
1"H
1"E
1"B
1"?
1"<
1"9
1"6
1"3
1"0
1"-
1"*
1"'
1"$
0~
b00000000000000000000000000110000 +
b00000000000000000000000000110000 n
b100 p
b11001101000000001100111000000010 o
b11001101000000001100111000000010 /
b00000000000000000000000000110100 -
b00000000000000000000000000110100 ,
#125000
0!
0"!
0"~
0"{
0"x
0"u
0"r
0"o
0"l
0"i
0"f
0"c
0"`
0"]
0"Z
0"W
0"T
0"Q
0"N
0"K
0"H
0"E
0"B
0"?
0"<
0"9
0"6
0"3
0"0
0"-
0"*
0"'
0"$
1~
#130000
1!
1"!
1"~
1"{
1"x
1"u
1"r
1"o
1"l
1"i
1"f
1"c
1"`
1"]
1"Z
1"W
1"T
1"Q
1"N
1"K
1"H
1"E
1"B
1"?
1"<
1"9
1"6
1"3
1"0
1"-
1"*
1"'
1"$
0~
b00000000000000000000000000110100 +
b00000000000000000000000000110100 n
b101 p
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx o
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /
b00000000000000000000000000111000 -
b00000000000000000000000000111000 ,
#135000
0!
0"!
0"~
0"{
0"x
0"u
0"r
0"o
0"l
0"i
0"f
0"c
0"`
0"]
0"Z
0"W
0"T
0"Q
0"N
0"K
0"H
0"E
0"B
0"?
0"<
0"9
0"6
0"3
0"0
0"-
0"*
0"'
0"$
1~
#140000
1!
1"!
1"~
1"{
1"x
1"u
1"r
1"o
1"l
1"i
1"f
1"c
1"`
1"]
1"Z
1"W
1"T
1"Q
1"N
1"K
1"H
1"E
1"B
1"?
1"<
1"9
1"6
1"3
1"0
1"-
1"*
1"'
1"$
0~
b00000000000000000000000000111000 +
b00000000000000000000000000111000 n
b110 p
b00000000000000000000000000111100 -
b00000000000000000000000000111100 ,
#145000
0!
0"!
0"~
0"{
0"x
0"u
0"r
0"o
0"l
0"i
0"f
0"c
0"`
0"]
0"Z
0"W
0"T
0"Q
0"N
0"K
0"H
0"E
0"B
0"?
0"<
0"9
0"6
0"3
0"0
0"-
0"*
0"'
0"$
1~
#150000
1!
1"!
1"~
1"{
1"x
1"u
1"r
1"o
1"l
1"i
1"f
1"c
1"`
1"]
1"Z
1"W
1"T
1"Q
1"N
1"K
1"H
1"E
1"B
1"?
1"<
1"9
1"6
1"3
1"0
1"-
1"*
1"'
1"$
0~
b00000000000000000000000000111100 +
b00000000000000000000000000111100 n
b111 p
b00000000000000000000000001000000 -
b00000000000000000000000001000000 ,
#155000
0!
0"!
0"~
0"{
0"x
0"u
0"r
0"o
0"l
0"i
0"f
0"c
0"`
0"]
0"Z
0"W
0"T
0"Q
0"N
0"K
0"H
0"E
0"B
0"?
0"<
0"9
0"6
0"3
0"0
0"-
0"*
0"'
0"$
1~
#160000
1!
1"!
1"~
1"{
1"x
1"u
1"r
1"o
1"l
1"i
1"f
1"c
1"`
1"]
1"Z
1"W
1"T
1"Q
1"N
1"K
1"H
1"E
1"B
1"?
1"<
1"9
1"6
1"3
1"0
1"-
1"*
1"'
1"$
0~
b00000000000000000000000001000000 +
b00000000000000000000000001000000 n
b000 p
b11000000100001010000001010000000 o
b11000000100001010000001010000000 /
b00000000000000000000000001000100 -
b00000000000000000000000001000100 ,
#165000
0!
0"!
0"~
0"{
0"x
0"u
0"r
0"o
0"l
0"i
0"f
0"c
0"`
0"]
0"Z
0"W
0"T
0"Q
0"N
0"K
0"H
0"E
0"B
0"?
0"<
0"9
0"6
0"3
0"0
0"-
0"*
0"'
0"$
1~
#170000
1!
1"!
1"~
1"{
1"x
1"u
1"r
1"o
1"l
1"i
1"f
1"c
1"`
1"]
1"Z
1"W
1"T
1"Q
1"N
1"K
1"H
1"E
1"B
1"?
1"<
1"9
1"6
1"3
1"0
1"-
1"*
1"'
1"$
0~
b00000000000000000000000001000100 +
b00000000000000000000000001000100 n
b001 p
b11001100010011101000101000000000 o
b11001100010011101000101000000000 /
b00000000000000000000000001001000 -
b00000000000000000000000001001000 ,
#175000
0!
0"!
0"~
0"{
0"x
0"u
0"r
0"o
0"l
0"i
0"f
0"c
0"`
0"]
0"Z
0"W
0"T
0"Q
0"N
0"K
0"H
0"E
0"B
0"?
0"<
0"9
0"6
0"3
0"0
0"-
0"*
0"'
0"$
1~
#180000
1!
1"!
1"~
1"{
1"x
1"u
1"r
1"o
1"l
1"i
1"f
1"c
1"`
1"]
1"Z
1"W
1"T
1"Q
1"N
1"K
1"H
1"E
1"B
1"?
1"<
1"9
1"6
1"3
1"0
1"-
1"*
1"'
1"$
0~
b00000000000000000000000001001000 +
b00000000000000000000000001001000 n
b010 p
b11001100001001101000011000000000 o
b11001100001001101000011000000000 /
b00000000000000000000000001001100 -
b00000000000000000000000001001100 ,
#185000
0!
0"!
0"~
0"{
0"x
0"u
0"r
0"o
0"l
0"i
0"f
0"c
0"`
0"]
0"Z
0"W
0"T
0"Q
0"N
0"K
0"H
0"E
0"B
0"?
0"<
0"9
0"6
0"3
0"0
0"-
0"*
0"'
0"$
1~
#190000
1!
1"!
1"~
1"{
1"x
1"u
1"r
1"o
1"l
1"i
1"f
1"c
1"`
1"]
1"Z
1"W
1"T
1"Q
1"N
1"K
1"H
1"E
1"B
1"?
1"<
1"9
1"6
1"3
1"0
1"-
1"*
1"'
1"$
0~
b00000000000000000000000001001100 +
b00000000000000000000000001001100 n
b011 p
b11001101001000000100010000000000 o
b11001101001000000100010000000000 /
b00000000000000000000000001010000 -
b00000000000000000000000001010000 ,
#195000
0!
0"!
0"~
0"{
0"x
0"u
0"r
0"o
0"l
0"i
0"f
0"c
0"`
0"]
0"Z
0"W
0"T
0"Q
0"N
0"K
0"H
0"E
0"B
0"?
0"<
0"9
0"6
0"3
0"0
0"-
0"*
0"'
0"$
1~
#200000
1!
1"!
1"~
1"{
1"x
1"u
1"r
1"o
1"l
1"i
1"f
1"c
1"`
1"]
1"Z
1"W
1"T
1"Q
1"N
1"K
1"H
1"E
1"B
1"?
1"<
1"9
1"6
1"3
1"0
1"-
1"*
1"'
1"$
0~
b00000000000000000000000001010000 +
b00000000000000000000000001010000 n
b100 p
b11001101000000001100111000000010 o
b11001101000000001100111000000010 /
b00000000000000000000000001010100 -
b00000000000000000000000001010100 ,

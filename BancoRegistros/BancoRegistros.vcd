$date
	Mon Mar 11 19:42:47 2024
$end

$version
	Synopsys VCS version R-2020.12-SP2_Full64
$end

$timescale
	1ps
$end

$comment Csum: 1 a37add3b5b97d981 $end


$scope module BancoRegistros_tb $end

$scope module DUT $end
$var wire 5 ! ptr_rd_1 [4:0] $end
$var wire 5 " ptr_rd_2 [4:0] $end
$var wire 5 # ptr_wr [4:0] $end
$var wire 64 $ data_wr [63:0] $end
$var wire 1 % wr_en $end
$var wire 1 & rst $end
$var wire 1 ' clk $end
$var reg 64 ( data_rd_1 [63:0] $end
$var reg 64 ) data_rd_2 [63:0] $end

$scope module Habilitador_escritura $end
$var wire 5 # reg_wr_cod [4:0] $end
$var wire 1 % wr_en $end
$upscope $end


$scope module Mux_rd_1 $end
$var wire 5 ! read_code [4:0] $end
$var wire 64 * Q [63:0] $end

$scope module Decodificador $end
$var wire 5 ! Selector [4:0] $end
$upscope $end

$upscope $end


$scope module Mux_rd_2 $end
$var wire 5 " read_code [4:0] $end
$var wire 64 + Q [63:0] $end

$scope module Decodificador $end
$var wire 5 " Selector [4:0] $end
$upscope $end

$upscope $end


$scope module Registro_[0].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 , clk $end
$var wire 1 & rst $end
$var reg 64 - q [63:0] $end
$upscope $end


$scope module Registro_[1].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 . clk $end
$var wire 1 & rst $end
$var reg 64 / q [63:0] $end
$upscope $end


$scope module Registro_[2].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 0 clk $end
$var wire 1 & rst $end
$var reg 64 1 q [63:0] $end
$upscope $end


$scope module Registro_[3].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 2 clk $end
$var wire 1 & rst $end
$var reg 64 3 q [63:0] $end
$upscope $end


$scope module Registro_[4].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 4 clk $end
$var wire 1 & rst $end
$var reg 64 5 q [63:0] $end
$upscope $end


$scope module Registro_[5].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 6 clk $end
$var wire 1 & rst $end
$var reg 64 7 q [63:0] $end
$upscope $end


$scope module Registro_[6].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 8 clk $end
$var wire 1 & rst $end
$var reg 64 9 q [63:0] $end
$upscope $end


$scope module Registro_[7].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 : clk $end
$var wire 1 & rst $end
$var reg 64 ; q [63:0] $end
$upscope $end


$scope module Registro_[8].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 < clk $end
$var wire 1 & rst $end
$var reg 64 = q [63:0] $end
$upscope $end


$scope module Registro_[9].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 > clk $end
$var wire 1 & rst $end
$var reg 64 ? q [63:0] $end
$upscope $end


$scope module Registro_[10].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 @ clk $end
$var wire 1 & rst $end
$var reg 64 A q [63:0] $end
$upscope $end


$scope module Registro_[11].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 B clk $end
$var wire 1 & rst $end
$var reg 64 C q [63:0] $end
$upscope $end


$scope module Registro_[12].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 D clk $end
$var wire 1 & rst $end
$var reg 64 E q [63:0] $end
$upscope $end


$scope module Registro_[13].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 F clk $end
$var wire 1 & rst $end
$var reg 64 G q [63:0] $end
$upscope $end


$scope module Registro_[14].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 H clk $end
$var wire 1 & rst $end
$var reg 64 I q [63:0] $end
$upscope $end


$scope module Registro_[15].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 J clk $end
$var wire 1 & rst $end
$var reg 64 K q [63:0] $end
$upscope $end


$scope module Registro_[16].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 L clk $end
$var wire 1 & rst $end
$var reg 64 M q [63:0] $end
$upscope $end


$scope module Registro_[17].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 N clk $end
$var wire 1 & rst $end
$var reg 64 O q [63:0] $end
$upscope $end


$scope module Registro_[18].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 P clk $end
$var wire 1 & rst $end
$var reg 64 Q q [63:0] $end
$upscope $end


$scope module Registro_[19].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 R clk $end
$var wire 1 & rst $end
$var reg 64 S q [63:0] $end
$upscope $end


$scope module Registro_[20].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 T clk $end
$var wire 1 & rst $end
$var reg 64 U q [63:0] $end
$upscope $end


$scope module Registro_[21].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 V clk $end
$var wire 1 & rst $end
$var reg 64 W q [63:0] $end
$upscope $end


$scope module Registro_[22].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 X clk $end
$var wire 1 & rst $end
$var reg 64 Y q [63:0] $end
$upscope $end


$scope module Registro_[23].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 Z clk $end
$var wire 1 & rst $end
$var reg 64 [ q [63:0] $end
$upscope $end


$scope module Registro_[24].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 \ clk $end
$var wire 1 & rst $end
$var reg 64 ] q [63:0] $end
$upscope $end


$scope module Registro_[25].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 ^ clk $end
$var wire 1 & rst $end
$var reg 64 _ q [63:0] $end
$upscope $end


$scope module Registro_[26].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 ` clk $end
$var wire 1 & rst $end
$var reg 64 a q [63:0] $end
$upscope $end


$scope module Registro_[27].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 b clk $end
$var wire 1 & rst $end
$var reg 64 c q [63:0] $end
$upscope $end


$scope module Registro_[28].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 d clk $end
$var wire 1 & rst $end
$var reg 64 e q [63:0] $end
$upscope $end


$scope module Registro_[29].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 f clk $end
$var wire 1 & rst $end
$var reg 64 g q [63:0] $end
$upscope $end


$scope module Registro_[30].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 h clk $end
$var wire 1 & rst $end
$var reg 64 i q [63:0] $end
$upscope $end


$scope module Registro_[31].RegistroFFD $end
$var wire 64 $ data [63:0] $end
$var wire 1 j clk $end
$var wire 1 & rst $end
$var reg 64 k q [63:0] $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end

#10000
$dumpvars
b0000000000000000000000000000000000000000000000000000000000000000 A
b0000000000000000000000000000000000000000000000000000000000000000 C
b0000000000000000000000000000000000000000000000000000000000000000 E
b0000000000000000000000000000000000000000000000000000000000000000 G
b0000000000000000000000000000000000000000000000000000000000000000 I
b0000000000000000000000000000000000000000000000000000000000000000 K
b0000000000000000000000000000000000000000000000000000000000000000 M
b0000000000000000000000000000000000000000000000000000000000000000 O
b0000000000000000000000000000000000000000000000000000000000000000 Q
b0000000000000000000000000000000000000000000000000000000000000000 S
b0000000000000000000000000000000000000000000000000000000000000001 /
b0000000000000000000000000000000000000000000000000000000000000000 U
b0000000000000000000000000000000000000000000000000000000000000000 W
b0000000000000000000000000000000000000000000000000000000000000000 Y
b0000000000000000000000000000000000000000000000000000000000000000 [
b0000000000000000000000000000000000000000000000000000000000000000 ]
b0000000000000000000000000000000000000000000000000000000000000000 _
b0000000000000000000000000000000000000000000000000000000000000000 a
b0000000000000000000000000000000000000000000000000000000000000000 c
b0000000000000000000000000000000000000000000000000000000000000000 e
b0000000000000000000000000000000000000000000000000000000000000000 g
b0000000000000000000000000000000000000000000000000000000000000000 1
b0000000000000000000000000000000000000000000000000000000000000000 i
b0000000000000000000000000000000000000000000000000000000000000000 k
b0000000000000000000000000000000000000000000000000000000000000000 3
b0000000000000000000000000000000000000000000000000000000000000000 5
b0000000000000000000000000000000000000000000000000000000000000000 7
b0000000000000000000000000000000000000000000000000000000000000000 9
b0000000000000000000000000000000000000000000000000000000000000000 ;
b0000000000000000000000000000000000000000000000000000000000000000 =
b0000000000000000000000000000000000000000000000000000000000000000 ?
b0000000000000000000000000000000000000000000000000000000000000001 (
b0000000000000000000000000000000000000000000000000000000000000000 )
b0000000000000000000000000000000000000000000000000000000000000000 -
b00001 !
b00100 "
b00001 #
b0000000000000000000000000000000000000000000000000000000000000001 $
1%
0&
0'
0,
1.
00
02
04
06
08
0:
0<
0>
0@
0B
0D
0F
0H
0J
0L
0N
0P
0R
0T
0V
0X
0Z
0\
0^
0`
0b
0d
0f
0h
0j
b0000000000000000000000000000000000000000000000000000000000000001 *
b0000000000000000000000000000000000000000000000000000000000000000 +
$end
#50000
1'
#60000
b0000000000000000000000000000000000000000000000000000000000000010 $
b00010 #
10
0.
b0000000000000000000000000000000000000000000000000000000000000010 1
#100000
0'
#110000
b00010 !
b00011 "
b0000000000000000000000000000000000000000000000000000000000000011 $
b00011 #
12
00
b0000000000000000000000000000000000000000000000000000000000000010 *
b0000000000000000000000000000000000000000000000000000000000000010 (
b0000000000000000000000000000000000000000000000000000000000000011 3
b0000000000000000000000000000000000000000000000000000000000000011 +
b0000000000000000000000000000000000000000000000000000000000000011 )
#150000
1'
#160000
b0000000000000000000000000000000000000000000000000000000000000100 $
b00100 #
14
02
b0000000000000000000000000000000000000000000000000000000000000100 5
#200000
0'
#210000
b00000 !
b00100 "
b0000000000000000000000000000000000000000000000000000000000000000 *
b0000000000000000000000000000000000000000000000000000000000000000 (
b0000000000000000000000000000000000000000000000000000000000000100 +
b0000000000000000000000000000000000000000000000000000000000000100 )
#250000
1'
#300000
0'
#350000
1'

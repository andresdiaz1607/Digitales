$date
	Sat Apr  6 22:59:16 2024
$end

$version
	Synopsys VCS version R-2020.12-SP2_Full64
$end

$timescale
	1ps
$end

$comment Csum: 1 182603bd71d4ea3a $end


$scope module InstructionMemory_tb $end

$scope module uut $end
$var wire 32 ! PC [31:0] $end
$var reg 3 " Opcode [2:0] $end
$var reg 5 # Rs1 [4:0] $end
$var reg 5 $ Rs2 [4:0] $end
$var reg 5 % Rd [4:0] $end
$var reg 32 & Offset [31:0] $end
$var wire 32 ' Instruction [0:31] $end
$var wire 3 ( Sel [2:0] $end
$var wire 3 ) DataProcessingOp [2:0] $end
$var wire 1 * SumOrSub $end

$scope module Memoria_de_instrucciones $end
$var wire 32 ! Addres [31:0] $end
$var wire 32 ' Instruction [0:31] $end
$var wire 3 + rom_addr [2:0] $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
0*
b110 )
b11000000100011010000010100000000 '
b00000000101000001011000100000011 &
b000 "
b01000 %
b10000 #
b01010 $
b000 (
b000 +
b00000000000000000000000000000000 !
$end
#10000
b00000000000000000000000000000100 !
b001 +
b11000100001111010000001000000100 '
b010 (
b001 "
b00100000010000001011110000100011 &
b00100 $
b00011 %
#20000
b00000000000000000000000000001000 !
b010 +
b11001100001100010000001000000000 '
b000 )
b110 (
b010 "
b00000000010000001000110000110011 &
#30000
b00000000000000000000000000001100 !
b011 +
b11001100001100010000001000000010 '
1*
b011 "
b01000000010000001000110000110011 &
#40000
b00000000000000000000000000010000 !
b100 +
b11001100001111110000001000000000 '
0*
b111 )
b100 "
b00000000010000001111110000110011 &
#50000
b00000000000000000000000000010100 !
b101 +
b11001100001111010000001000000000 '
b110 )
b101 "
b00000000010000001011110000110011 &
#60000
b00000000000000000000000000011000 !
b110 +
b11000110001100010000001000000100 '
b000 )
b011 (
b110 "
b00100000010000001000110001100011 &
#70000
b00000000000000000000000000011100 !
b111 +
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx '
x*
bxxx )
bxxx (
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx &
bxxxxx #
bxxxxx $
bxxxxx %

$date
	Thu Apr 11 22:56:17 2024
$end

$version
	Synopsys VCS version R-2020.12-SP2_Full64
$end

$timescale
	1ps
$end

$comment Csum: 1 58ac38ed46367551 $end


$scope module test_RISC_V $end

$scope module uut $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 # beq $end
$var wire 1 $ mem_read $end
$var wire 1 % mem_write $end
$var wire 1 & alu_src $end
$var wire 1 ' mem_to_reg $end
$var wire 1 ( reg_write $end
$var wire 2 ) alu_op [1:0] $end
$var wire 3 * opcode [2:0] $end

$scope module DatapathUnit $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 # beq $end
$var wire 1 $ mem_read $end
$var wire 1 % mem_write $end
$var wire 1 & alu_src $end
$var wire 1 ' mem_to_reg $end
$var wire 1 ( reg_write $end
$var wire 2 ) alu_op [1:0] $end
$var wire 3 * Opcode [2:0] $end
$var reg 32 + pc_current [31:0] $end
$var wire 32 , pc_next [31:0] $end
$var wire 32 - pc2 [31:0] $end
$var wire 32 . offset [31:0] $end
$var wire 3 / cod_ins [2:0] $end
$var wire 5 0 reg_write_dest [4:0] $end
$var wire 64 1 reg_write_data [63:0] $end
$var wire 5 2 reg_read_addr_1 [4:0] $end
$var wire 64 3 reg_read_data_1 [63:0] $end
$var wire 5 4 reg_read_addr_2 [4:0] $end
$var wire 64 5 reg_read_data_2 [63:0] $end
$var wire 64 6 im_ext [63:0] $end
$var wire 64 7 read_data2 [63:0] $end
$var wire 64 8 ALU_out [63:0] $end
$var wire 1 9 zero_flag $end
$var wire 1 : beq_control $end
$var wire 32 ; PC_beq [31:0] $end
$var wire 64 < mem_read_data [63:0] $end

$scope module Memoria_Instrucciones $end
$var wire 1 ! clk $end
$var wire 32 = pc [31:0] $end
$var reg 3 > Opcode [2:0] $end
$var reg 5 ? Rs1 [4:0] $end
$var reg 5 @ Rs2 [4:0] $end
$var reg 5 A Rd [4:0] $end
$var reg 32 B Offset [31:0] $end
$var wire 32 C Instruction [0:31] $end
$var wire 3 D Sel [2:0] $end
$var wire 3 E DataProcessingOp [2:0] $end
$var wire 1 F SumOrSub $end

$scope module Bloque_de_instrucciones $end
$var wire 1 ! clk $end
$var wire 32 = Addres [31:0] $end
$var reg 32 G Instruction [0:31] $end
$var wire 3 H rom_addr [2:0] $end
$upscope $end

$upscope $end


$scope module GPRs $end
$var wire 5 2 ptr_rd_1 [4:0] $end
$var wire 5 4 ptr_rd_2 [4:0] $end
$var wire 5 0 ptr_wr [4:0] $end
$var wire 64 1 data_wr [63:0] $end
$var wire 1 ( wr_en $end
$var wire 1 " rst $end
$var wire 1 ! clk $end
$var reg 64 I data_rd_1 [63:0] $end
$var reg 64 J data_rd_2 [63:0] $end

$scope module Habilitador_escritura $end
$var wire 5 0 reg_wr_cod [4:0] $end
$var wire 1 ( wr_en $end
$upscope $end


$scope module Mux_rd_1 $end
$var wire 5 2 read_code [4:0] $end
$var wire 64 K Q [63:0] $end

$scope module Decodificador $end
$var wire 5 2 Selector [4:0] $end
$upscope $end

$upscope $end


$scope module Mux_rd_2 $end
$var wire 5 4 read_code [4:0] $end
$var wire 64 L Q [63:0] $end

$scope module Decodificador $end
$var wire 5 4 Selector [4:0] $end
$upscope $end

$upscope $end


$scope module Registro_[1].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 M enable $end
$var reg 64 N q [63:0] $end
$upscope $end


$scope module Registro_[2].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 O enable $end
$var reg 64 P q [63:0] $end
$upscope $end


$scope module Registro_[3].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 Q enable $end
$var reg 64 R q [63:0] $end
$upscope $end


$scope module Registro_[4].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 S enable $end
$var reg 64 T q [63:0] $end
$upscope $end


$scope module Registro_[5].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 U enable $end
$var reg 64 V q [63:0] $end
$upscope $end


$scope module Registro_[6].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 W enable $end
$var reg 64 X q [63:0] $end
$upscope $end


$scope module Registro_[7].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 Y enable $end
$var reg 64 Z q [63:0] $end
$upscope $end


$scope module Registro_[8].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 [ enable $end
$var reg 64 \ q [63:0] $end
$upscope $end


$scope module Registro_[9].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 ] enable $end
$var reg 64 ^ q [63:0] $end
$upscope $end


$scope module Registro_[10].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 _ enable $end
$var reg 64 ` q [63:0] $end
$upscope $end


$scope module Registro_[11].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 a enable $end
$var reg 64 b q [63:0] $end
$upscope $end


$scope module Registro_[12].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 c enable $end
$var reg 64 d q [63:0] $end
$upscope $end


$scope module Registro_[13].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 e enable $end
$var reg 64 f q [63:0] $end
$upscope $end


$scope module Registro_[14].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 g enable $end
$var reg 64 h q [63:0] $end
$upscope $end


$scope module Registro_[15].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 i enable $end
$var reg 64 j q [63:0] $end
$upscope $end


$scope module Registro_[16].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 k enable $end
$var reg 64 l q [63:0] $end
$upscope $end


$scope module Registro_[17].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 m enable $end
$var reg 64 n q [63:0] $end
$upscope $end


$scope module Registro_[18].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 o enable $end
$var reg 64 p q [63:0] $end
$upscope $end


$scope module Registro_[19].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 q enable $end
$var reg 64 r q [63:0] $end
$upscope $end


$scope module Registro_[20].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 s enable $end
$var reg 64 t q [63:0] $end
$upscope $end


$scope module Registro_[21].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 u enable $end
$var reg 64 v q [63:0] $end
$upscope $end


$scope module Registro_[22].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 w enable $end
$var reg 64 x q [63:0] $end
$upscope $end


$scope module Registro_[23].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 y enable $end
$var reg 64 z q [63:0] $end
$upscope $end


$scope module Registro_[24].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 { enable $end
$var reg 64 | q [63:0] $end
$upscope $end


$scope module Registro_[25].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 } enable $end
$var reg 64 ~ q [63:0] $end
$upscope $end


$scope module Registro_[26].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 "! enable $end
$var reg 64 "" q [63:0] $end
$upscope $end


$scope module Registro_[27].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 "# enable $end
$var reg 64 "$ q [63:0] $end
$upscope $end


$scope module Registro_[28].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 "% enable $end
$var reg 64 "& q [63:0] $end
$upscope $end


$scope module Registro_[29].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 "' enable $end
$var reg 64 "( q [63:0] $end
$upscope $end


$scope module Registro_[30].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 ") enable $end
$var reg 64 "* q [63:0] $end
$upscope $end


$scope module Registro_[31].Registro $end
$var wire 64 1 data [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 "+ enable $end
$var reg 64 ", q [63:0] $end
$upscope $end

$upscope $end


$scope module InmSext $end
$var wire 32 . Offset [31:0] $end
$var reg 64 "- Inmediato [63:0] $end
$var wire 3 ". Selector [2:0] $end
$upscope $end


$scope module UnidadALU $end
$var wire 64 3 A [63:0] $end
$var wire 64 7 B [63:0] $end
$var wire 2 ) sel [1:0] $end
$var wire 1 9 zero $end
$var reg 64 "/ resultado [63:0] $end
$upscope $end


$scope module Memoria_Informacion $end
$var wire 1 ! clk $end
$var wire 64 8 mem_access_addr [63:0] $end
$var wire 64 5 mem_write_data [63:0] $end
$var wire 1 % mem_write_en $end
$var wire 1 $ mem_read $end
$var wire 64 < mem_read_data [63:0] $end
$var wire 64 "0 ram_addr [63:0] $end
$upscope $end

$upscope $end


$scope module ControlUnit $end
$var wire 3 * Opcode [2:0] $end
$var reg 2 "1 alu_op [1:0] $end
$var reg 1 "2 beq $end
$var reg 1 "3 mem_read $end
$var reg 1 "4 mem_write $end
$var reg 1 "5 alu_src $end
$var reg 1 "6 mem_to_reg $end
$var reg 1 "7 reg_write $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
1"5
0"2
1"3
1"6
0"4
1"7
0F
1&
0#
0:
1$
1'
0%
09
b0000000000000000000000000000000000000000000000000000000000000001 8
b11000001000001000000100000000000 G
b00 "1
b010 E
b0000000000000000000000000000000000000000000000000000000000000001 "-
b11000001000001000000100000000000 C
b000 >
b00000000000100000010000010000011 B
b00000000000000000000000000000101 ;
b00001 A
b0000000000000000000000000000000000000000000000000000000000000000 `
b0000000000000000000000000000000000000000000000000000000000000000 b
b0000000000000000000000000000000000000000000000000000000000000000 d
b0000000000000000000000000000000000000000000000000000000000000000 f
b0000000000000000000000000000000000000000000000000000000000000000 h
b0000000000000000000000000000000000000000000000000000000000000000 j
b0000000000000000000000000000000000000000000000000000000000000000 l
b0000000000000000000000000000000000000000000000000000000000000000 n
b0000000000000000000000000000000000000000000000000000000000000000 p
b0000000000000000000000000000000000000000000000000000000000000000 r
b0000000000000000000000000000000000000000000000000000000000000000 t
b0000000000000000000000000000000000000000000000000000000000000000 v
b0000000000000000000000000000000000000000000000000000000000000000 x
b0000000000000000000000000000000000000000000000000000000000000000 z
b0000000000000000000000000000000000000000000000000000000000000000 |
b0000000000000000000000000000000000000000000000000000000000000000 ~
b0000000000000000000000000000000000000000000000000000000000000000 ""
b0000000000000000000000000000000000000000000000000000000000000000 "$
b0000000000000000000000000000000000000000000000000000000000000000 "&
b0000000000000000000000000000000000000000000000000000000000000000 "(
b0000000000000000000000000000000000000000000000000000000000000000 P
b0000000000000000000000000000000000000000000000000000000000000000 "*
b0000000000000000000000000000000000000000000000000000000000000000 ",
b0000000000000000000000000000000000000000000000000000000000000000 R
b0000000000000000000000000000000000000000000000000000000000000000 T
b0000000000000000000000000000000000000000000000000000000000000000 V
b0000000000000000000000000000000000000000000000000000000000000000 X
b0000000000000000000000000000000000000000000000000000000000000000 Z
b0000000000000000000000000000000000000000000000000000000000000000 \
b0000000000000000000000000000000000000000000000000000000000000000 ^
b00000 ?
b00001 @
b000 D
b000 ".
b00 )
b000 /
b0000000000000000000000000000000000000000000000000000000000000000 I
b0000000000000000000000000000000000000000000000000000000000000000 J
b0000000000000000000000000000000000000000000000000000000000000001 6
b0000000000000000000000000000000000000000000000100000000000000001 <
b00000000000100000010000010000011 .
b000 *
b00000000000000000000000000000000 =
b00000000000000000000000000000100 -
b00000000000000000000000000000000 +
b00000000000000000000000000000100 ,
b0000000000000000000000000000000000000000000000000000000000000000 N
b0000000000000000000000000000000000000000000000000000000000000001 "0
b0000000000000000000000000000000000000000000000000000000000000001 7
b0000000000000000000000000000000000000000000000000000000000000000 3
b0000000000000000000000000000000000000000000000000000000000000000 5
b0000000000000000000000000000000000000000000000100000000000000001 1
b0000000000000000000000000000000000000000000000000000000000000001 "/
b000 H
0!
1"
1(
b00001 0
b00000 2
b00001 4
b0000000000000000000000000000000000000000000000000000000000000000 K
b0000000000000000000000000000000000000000000000000000000000000000 L
1M
0O
0Q
0S
0U
0W
0Y
0[
0]
0_
0a
0c
0e
0g
0i
0k
0m
0o
0q
0s
0u
0w
0y
0{
0}
0"!
0"#
0"%
0"'
0")
0"+
$end
#5000
0"
1!
b00000000000000000000000000000100 +
b00000000000000000000000000000100 =
b001 H
b11000000100001000000010000000000 G
b11000000100001000000010000000000 C
b00000000000000000000000000001000 -
b00000000000000000000000000001001 ;
b0000000000000000000000000000000000000000000000100000000000000001 N
b00000000001000000010000100000011 B
b00000000001000000010000100000011 .
b00000000000000000000000000001000 ,
b0000000000000000000000000000000000000000000000000000000000000010 "-
b0000000000000000000000000000000000000000000000000000000000000010 6
b00000000000000000000000000001010 ;
b0000000000000000000000000000000000000000000000100000000000000001 L
b0000000000000000000000000000000000000000000000100000000000000001 J
b0000000000000000000000000000000000000000000000100000000000000001 5
b0000000000000000000000000000000000000000000000000000000000000010 7
b0000000000000000000000000000000000000000000000000000000000000010 "/
b0000000000000000000000000000000000000000000000000000000000000010 8
b0000000000000000000000000000000000000000000000000000000000000010 "0
b0000000000000000000000000000000000000000000000010000000000000001 <
b0000000000000000000000000000000000000000000000010000000000000001 1
b00010 @
b00010 4
b00010 A
b00010 0
1O
0M
b0000000000000000000000000000000000000000000000000000000000000000 L
b0000000000000000000000000000000000000000000000000000000000000000 J
b0000000000000000000000000000000000000000000000000000000000000000 5
#10000
0!
#15000
1!
b00000000000000000000000000001000 +
b00000000000000000000000000001000 =
b010 H
b11001101100000001000100000000000 G
b11001101100000001000100000000000 C
b000 E
b110 D
b00000000000000000000000000001100 -
b00000000000000000000000000001110 ;
b0000000000000000000000000000000000000000000000010000000000000001 P
b010 >
b010 /
b010 *
b00000000000100010000000110110011 B
b00000000000100010000000110110011 .
b011 ".
b00000000000000000000000000001100 ,
0"3
0$
0"6
0'
0"5
0&
b0000000000000000000000000000000000000000000000000000000000000000 "-
b0000000000000000000000000000000000000000000000000000000000000000 6
b00000000000000000000000000001100 ;
b0000000000000000000000000000000000000000000000010000000000000001 L
b0000000000000000000000000000000000000000000000010000000000000001 J
b0000000000000000000000000000000000000000000000010000000000000001 5
b0000000000000000000000000000000000000000000000000000000000000000 <
b0000000000000000000000000000000000000000000000000000000000000010 1
b0000000000000000000000000000000000000000000000010000000000000001 7
b0000000000000000000000000000000000000000000000010000000000000001 "/
b0000000000000000000000000000000000000000000000010000000000000001 8
b0000000000000000000000000000000000000000000000010000000000000001 "0
b0000000000000000000000000000000000000000000000010000000000000001 1
b00010 ?
b00010 2
b00001 @
b00001 4
b00011 A
b00011 0
1Q
0O
b0000000000000000000000000000000000000000000000010000000000000001 K
b0000000000000000000000000000000000000000000000010000000000000001 I
b0000000000000000000000000000000000000000000000010000000000000001 3
b0000000000000000000000000000000000000000000000100000000000000001 L
b0000000000000000000000000000000000000000000000100000000000000001 J
b0000000000000000000000000000000000000000000000100000000000000001 5
b0000000000000000000000000000000000000000000000100000000000000010 "/
b0000000000000000000000000000000000000000000000100000000000000010 8
b0000000000000000000000000000000000000000000000100000000000000010 "0
b0000000000000000000000000000000000000000000000100000000000000001 7
b0000000000000000000000000000000000000000000000100000000000000010 1
b0000000000000000000000000000000000000000000000110000000000000010 "/
b0000000000000000000000000000000000000000000000110000000000000010 8
b0000000000000000000000000000000000000000000000110000000000000010 "0
b0000000000000000000000000000000000000000000000110000000000000010 1
#20000
0!
#25000
1!
b00000000000000000000000000001100 +
b00000000000000000000000000001100 =
b011 H
b11000101000001000000110000000000 G
b11000101000001000000110000000000 C
b010 E
b010 D
b00000000000000000000000000010000 -
b00000000000000000000000000010000 ;
b0000000000000000000000000000000000000000000000110000000000000010 R
b001 >
b001 /
b001 *
b00000000001100000010000010100011 B
b00000000001100000010000010100011 .
b010 ".
b00000000000000000000000000010000 ,
1"4
1%
0"7
0(
1"5
1&
b0000000000000000000000000000000000000000000000000000000000000001 "-
b0000000000000000000000000000000000000000000000000000000000000001 6
b00000000000000000000000000010001 ;
0Q
b0000000000000000000000000000000000000000000000000000000000000001 7
b0000000000000000000000000000000000000000000000010000000000000010 "/
b0000000000000000000000000000000000000000000000010000000000000010 8
b0000000000000000000000000000000000000000000000010000000000000010 "0
b0000000000000000000000000000000000000000000000010000000000000010 1
b00000 ?
b00000 2
b00011 @
b00011 4
b00001 A
b00001 0
b0000000000000000000000000000000000000000000000000000000000000000 K
b0000000000000000000000000000000000000000000000000000000000000000 I
b0000000000000000000000000000000000000000000000000000000000000000 3
b0000000000000000000000000000000000000000000000110000000000000010 L
b0000000000000000000000000000000000000000000000110000000000000010 J
b0000000000000000000000000000000000000000000000110000000000000010 5
b0000000000000000000000000000000000000000000000000000000000000001 "/
b0000000000000000000000000000000000000000000000000000000000000001 8
b0000000000000000000000000000000000000000000000000000000000000001 "0
b0000000000000000000000000000000000000000000000000000000000000001 1
#30000
0!
#35000
1!
b00000000000000000000000000010000 +
b00000000000000000000000000010000 =
b100 H
b11001101010000001000100000000010 G
b11001101010000001000100000000010 C
1F
b000 E
b110 D
b00000000000000000000000000010100 -
b00000000000000000000000000010101 ;
b011 >
b011 /
b011 *
b01000000000100010000001010110011 B
b01000000000100010000001010110011 .
b011 ".
b00000000000000000000000000010100 ,
b01 "1
b01 )
0"4
0%
1"7
1(
0"5
0&
b0000000000000000000000000000000000000000000000000000000000000000 "-
b0000000000000000000000000000000000000000000000000000000000000000 6
b00000000000000000000000000010100 ;
b1111111111111111111111111111111111111111111111111111111111111111 "/
b1111111111111111111111111111111111111111111111111111111111111111 8
b1111111111111111111111111111111111111111111111111111111111111111 "0
1M
b0000000000000000000000000000000000000000000000110000000000000010 7
b1111111111111111111111111111111111111111111111111111111111111111 1
b1111111111111111111111111111111111111111111111001111111111111110 "/
b1111111111111111111111111111111111111111111111001111111111111110 8
b1111111111111111111111111111111111111111111111001111111111111110 "0
b1111111111111111111111111111111111111111111111001111111111111110 1
b00010 ?
b00010 2
b00001 @
b00001 4
b00101 A
b00101 0
1U
0M
b0000000000000000000000000000000000000000000000010000000000000001 K
b0000000000000000000000000000000000000000000000010000000000000001 I
b0000000000000000000000000000000000000000000000010000000000000001 3
b0000000000000000000000000000000000000000000000100000000000000001 L
b0000000000000000000000000000000000000000000000100000000000000001 J
b0000000000000000000000000000000000000000000000100000000000000001 5
b1111111111111111111111111111111111111111111111011111111111111111 "/
b1111111111111111111111111111111111111111111111011111111111111111 8
b1111111111111111111111111111111111111111111111011111111111111111 "0
b0000000000000000000000000000000000000000000000100000000000000001 7
b1111111111111111111111111111111111111111111111011111111111111111 1
b1111111111111111111111111111111111111111111111110000000000000000 "/
b1111111111111111111111111111111111111111111111110000000000000000 8
b1111111111111111111111111111111111111111111111110000000000000000 "0
b1111111111111111111111111111111111111111111111110000000000000000 1
#40000
0!
#45000
1!
b00000000000000000000000000010100 +
b00000000000000000000000000010100 =
b101 H
b11001100110001101000100000000000 G
b11001100110001101000100000000000 C
0F
b011 E
b00000000000000000000000000011000 -
b00000000000000000000000000011000 ;
b1111111111111111111111111111111111111111111111110000000000000000 V
b101 >
b101 /
b101 *
b00000000000100010110001100110011 B
b00000000000100010110001100110011 .
b00000000000000000000000000011000 ,
b11 "1
b11 )
b0000000000000000000000000000000000000000000000110000000000000001 "/
b0000000000000000000000000000000000000000000000110000000000000001 8
b0000000000000000000000000000000000000000000000110000000000000001 "0
b0000000000000000000000000000000000000000000000110000000000000001 1
b00110 A
b00110 0
1W
0U
#50000
0!
#55000
1!
b00000000000000000000000000011000 +
b00000000000000000000000000011000 =
b110 H
b11001101110011101000100000000000 G
b11001101110011101000100000000000 C
b111 E
b00000000000000000000000000011100 -
b00000000000000000000000000011100 ;
b0000000000000000000000000000000000000000000000110000000000000001 X
b100 >
b100 /
b100 *
b00000000000100010111001110110011 B
b00000000000100010111001110110011 .
b00000000000000000000000000011100 ,
b10 "1
b10 )
b0000000000000000000000000000000000000000000000000000000000000001 "/
b0000000000000000000000000000000000000000000000000000000000000001 8
b0000000000000000000000000000000000000000000000000000000000000001 "0
b0000000000000000000000000000000000000000000000000000000000000001 1
b00111 A
b00111 0
1Y
0W
#60000
0!
#65000
1!
b00000000000000000000000000011100 +
b00000000000000000000000000011100 =
b111 H
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx G
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx C
xF
bxxx E
bxxx D
b00000000000000000000000000100000 -
b00000000000000000000000000100000 ;
b0000000000000000000000000000000000000000000000000000000000000001 Z
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx B
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx .
bxxx ".
b00000000000000000000000000100000 ,
bxxxxx ?
bxxxxx 2
bxxxxx @
bxxxxx 4
bxxxxx A
bxxxxx 0
x"+
x")
x"'
x"%
x"#
x"!
x}
x{
xy
xw
xu
xs
xq
xo
xm
xk
xi
xg
xe
xc
xa
x_
x]
x[
xY
xW
xU
xS
xQ
xO
xM
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx K
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx I
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 3
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx L
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx J
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 5
b0000000000000000000000000000000000000000000000x0000000000000000x "/
b0000000000000000000000000000000000000000000000x0000000000000000x 8
b0000000000000000000000000000000000000000000000x0000000000000000x "0
x9
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 7
b0000000000000000000000000000000000000000000000x0000000000000000x 1
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "/
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 8
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "0
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 1
#70000
0!
#75000
1!
b00000000000000000000000000100000 +
b00000000000000000000000000100000 =
b000 H
b11000001000001000000100000000000 G
b11000001000001000000100000000000 C
0F
b010 E
b000 D
b00000000000000000000000000100100 -
b00000000000000000000000000100100 ;
b000 >
b000 /
b000 *
b00000000000100000010000010000011 B
b00000000000100000010000010000011 .
b000 ".
b00000000000000000000000000100100 ,
b00 "1
b00 )
1"3
1$
1"6
1'
1"5
1&
b0000000000000000000000000000000000000000000000000000000000000001 "-
b0000000000000000000000000000000000000000000000000000000000000001 6
b00000000000000000000000000100101 ;
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx <
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 1
b0000000000000000000000000000000000000000000000000000000000000001 7
b00000 ?
b00000 2
b00001 @
b00001 4
b00001 A
b00001 0
0"+
0")
0"'
0"%
0"#
0"!
0}
0{
0y
0w
0u
0s
0q
0o
0m
0k
0i
0g
0e
0c
0a
0_
0]
0[
0Y
0W
0U
0S
0Q
0O
1M
b0000000000000000000000000000000000000000000000000000000000000000 K
b0000000000000000000000000000000000000000000000000000000000000000 I
b0000000000000000000000000000000000000000000000000000000000000000 3
b0000000000000000000000000000000000000000000000100000000000000001 L
b0000000000000000000000000000000000000000000000100000000000000001 J
b0000000000000000000000000000000000000000000000100000000000000001 5
b0000000000000000000000000000000000000000000000000000000000000001 "/
b0000000000000000000000000000000000000000000000000000000000000001 8
b0000000000000000000000000000000000000000000000000000000000000001 "0
09
b0000000000000000000000000000000000000000000000110000000000000010 <
b0000000000000000000000000000000000000000000000110000000000000010 1
#80000
0!
